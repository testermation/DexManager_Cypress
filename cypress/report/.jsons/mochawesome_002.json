{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-20T16:30:22.767Z",
    "end": "2024-05-20T16:30:22.857Z",
    "duration": 90,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "739e0b6d-b67d-4b6b-a208-079f332416f5",
      "title": "",
      "fullFile": "cypress\\e2e\\Learning\\LeyendoDataIn.cy.js",
      "file": "cypress\\e2e\\Learning\\LeyendoDataIn.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d3db0b0-46db-453c-bcef-4573994ffd2e",
          "title": "Ejemplo de prueba para leer un objeto JSON",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Debería leer y acceder a un objeto JSON",
              "fullTitle": "Ejemplo de prueba para leer un objeto JSON Debería leer y acceder a un objeto JSON",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cargar el archivo JSON usando cy.fixture()\ncy.fixture('dataIn.json').then(datos => {\n  // Acceder a las propiedades del objeto JSON\n  //expect(datos).to.have.property('grupo1');\n  //expect(datos).to.have.property('grupo2');\n  // Acceder a los elementos dentro de \"grupo1\" y \"grupo2\"\n  const ruta = datos.ruta;\n  let grupo = [];\n  if (ruta === \"Testing/Automation/carpeta 1\") {\n    grupo = datos.grupo1;\n  } else {\n    grupo = datos.grupo2;\n  }\n  cy.log(grupo[0].nameMedia1), cy.log(grupo[0].nameMedia2), cy.log(grupo[0].nameMedia3), cy.log(grupo[0].nameMedia4), cy.log(grupo[0].nameMedia5);\n  // Hacer aserciones o realizar acciones con los elementos\n  //expect(grupo1).to.be.an('array').that.has.lengthOf(1);\n  //expect(grupo2).to.be.an('array').that.has.lengthOf(1);\n  // Acceder a los valores dentro de los objetos en \"grupo1\" y \"grupo2\"\n  //expect(grupo1[0].nameMedia1).to.equal('Pandas 1.jpg');\n  //expect(grupo2[0].nameMedia5).to.equal('Pandas 10.jpg');\n});",
              "err": {},
              "uuid": "2cf3b19c-4e86-4b97-b33f-f9ff08087077",
              "parentUUID": "9d3db0b0-46db-453c-bcef-4573994ffd2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cf3b19c-4e86-4b97-b33f-f9ff08087077"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "reportPageTitle": "Suit_Login_Result",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}